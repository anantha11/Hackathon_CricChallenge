<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BattingSeries_Master' inline='true' name='federated.1gpcpni113j7pd17w58df0qfm3xi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BattingSeries_Master' name='textscan.1l4xzwn1b2nsq81gd13jl1ritphp'>
            <connection class='textscan' directory='E:/Upgrad_DataScience/Hackathon/DataSet/Master_Cleaned' filename='BattingSeries_Master.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1l4xzwn1b2nsq81gd13jl1ritphp' name='BattingSeries_Master.csv' table='[BattingSeries_Master#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Player' ordinal='0' />
            <column datatype='integer' name='Mat' ordinal='1' />
            <column datatype='integer' name='Inns' ordinal='2' />
            <column datatype='integer' name='Notouts' ordinal='3' />
            <column datatype='integer' name='Runs' ordinal='4' />
            <column datatype='integer' name='HS' ordinal='5' />
            <column datatype='real' name='Ave' ordinal='6' />
            <column datatype='string' name='BF' ordinal='7' />
            <column datatype='string' name='SR' ordinal='8' />
            <column datatype='integer' name='100s' ordinal='9' />
            <column datatype='integer' name='50s' ordinal='10' />
            <column datatype='integer' name='0s' ordinal='11' />
            <column datatype='integer' name='4s' ordinal='12' />
            <column datatype='integer' name='6s' ordinal='13' />
            <column datatype='date' name='Date' ordinal='14' />
            <column datatype='string' name='Winner' ordinal='15' />
            <column datatype='string' name='Series' ordinal='16' />
            <column datatype='integer' name='Year' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mat]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Mat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inns]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Inns</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Notouts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Notouts]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Notouts</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runs]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Runs</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HS]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>HS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ave</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ave]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Ave</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BF</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BF]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>BF</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SR]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>SR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>100s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[100s]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>100s</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>50s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[50s]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>50s</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[0s]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>0s</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4s]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>4s</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6s]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>6s</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Winner]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Winner</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Series]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Series</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[BattingSeries_Master.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='0S' datatype='integer' name='[0s]' role='measure' type='quantitative' />
      <column caption='100S' datatype='integer' name='[100s]' role='measure' type='quantitative' />
      <column caption='4S' datatype='integer' name='[4s]' role='measure' type='quantitative' />
      <column caption='50S' datatype='integer' name='[50s]' role='measure' type='quantitative' />
      <column caption='6S' datatype='integer' name='[6s]' role='measure' type='quantitative' />
      <column datatype='string' name='[Bowlers]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Player]' new-bin='true'>
          <bin default-name='false' value='&quot;Bowlers&quot;'>
            <value>&quot;A Zampa&quot;</value>
            <value>&quot;AJ Tye&quot;</value>
            <value>&quot;B Kumar&quot;</value>
            <value>&quot;JA Richardson&quot;</value>
            <value>&quot;JJ Bumrah&quot;</value>
            <value>&quot;JP Behrendorff&quot;</value>
            <value>&quot;Kuldeep Yadav&quot;</value>
            <value>&quot;Mohammed Shami&quot;</value>
            <value>&quot;NM Coulter-Nile&quot;</value>
            <value>&quot;NM Lyon&quot;</value>
            <value>&quot;PJ Cummins&quot;</value>
            <value>&quot;S Kaul&quot;</value>
            <value>&quot;YS Chahal&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Player]' new-bin='true'>
          <bin default-name='false' value='&quot;NotPlaying&quot;'>
            <value>&quot;A Mishra&quot;</value>
            <value>&quot;AC Agar&quot;</value>
            <value>&quot;AM Rahane&quot;</value>
            <value>&quot;AR Patel&quot;</value>
            <value>&quot;B Stanlake&quot;</value>
            <value>&quot;BB Sran&quot;</value>
            <value>&quot;BJ Haddin&quot;</value>
            <value>&quot;CA Lynn&quot;</value>
            <value>&quot;CL White&quot;</value>
            <value>&quot;CP Tremain&quot;</value>
            <value>&quot;DA Warner&quot;</value>
            <value>&quot;DJ Worrall&quot;</value>
            <value>&quot;DL Chahar&quot;</value>
            <value>&quot;DS Kulkarni&quot;</value>
            <value>&quot;FY Fazal&quot;</value>
            <value>&quot;GJ Bailey&quot;</value>
            <value>&quot;Gurkeerat Singh&quot;</value>
            <value>&quot;Harbhajan Singh&quot;</value>
            <value>&quot;HH Pandya&quot;</value>
            <value>&quot;HWR Cartwright&quot;</value>
            <value>&quot;I Sharma&quot;</value>
            <value>&quot;J Yadav&quot;</value>
            <value>&quot;JA Burns&quot;</value>
            <value>&quot;JL Pattinson&quot;</value>
            <value>&quot;JM Mennie&quot;</value>
            <value>&quot;JP Faulkner&quot;</value>
            <value>&quot;JR Hazlewood&quot;</value>
            <value>&quot;JS Paris&quot;</value>
            <value>&quot;JW Hastings&quot;</value>
            <value>&quot;KD Karthik&quot;</value>
            <value>&quot;KK Ahmed&quot;</value>
            <value>&quot;KK Nair&quot;</value>
            <value>&quot;KW Richardson&quot;</value>
            <value>&quot;M Vijay&quot;</value>
            <value>&quot;MA Starc&quot;</value>
            <value>&quot;MC Henriques&quot;</value>
            <value>&quot;MG Johnson&quot;</value>
            <value>&quot;MG Neser&quot;</value>
            <value>&quot;MJ Clarke&quot;</value>
            <value>&quot;MK Pandey&quot;</value>
            <value>&quot;MK Tiwary&quot;</value>
            <value>&quot;MM Sharma&quot;</value>
            <value>&quot;Mohammed Siraj&quot;</value>
            <value>&quot;MR Marsh&quot;</value>
            <value>&quot;MS Wade&quot;</value>
            <value>&quot;PM Siddle&quot;</value>
            <value>&quot;R Ashwin&quot;</value>
            <value>&quot;R Dhawan&quot;</value>
            <value>&quot;RV Uthappa&quot;</value>
            <value>&quot;SD Heazlett&quot;</value>
            <value>&quot;Shubman Gill&quot;</value>
            <value>&quot;SK Raina&quot;</value>
            <value>&quot;SM Boland&quot;</value>
            <value>&quot;SN Thakur&quot;</value>
            <value>&quot;SPD Smith&quot;</value>
            <value>&quot;SR Watson&quot;</value>
            <value>&quot;SS Iyer&quot;</value>
            <value>&quot;STR Binny&quot;</value>
            <value>&quot;TD Paine&quot;</value>
            <value>&quot;TM Head&quot;</value>
            <value>&quot;UT Yadav&quot;</value>
            <value>&quot;Washington Sundar&quot;</value>
            <value>&quot;XJ Doherty&quot;</value>
            <value>&quot;Yuvraj Singh&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column datatype='string' name='[Series]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Bowlers,Player)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Bowlers]' />
          <groupfilter function='level-members' level='[none:Player:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Player,Series)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Player:nk]' />
          <groupfilter function='level-members' level='[none:Series:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.446429' measure-ordering='alphabetic' measure-percentage='0.553571' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Player:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Consistent 6 hitters across series'>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column caption='6S' datatype='integer' name='[6s]' role='measure' type='quantitative' />
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6s]' derivation='Sum' name='[sum:6s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AJ Finch&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;S Dhawan&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;V Shankar&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Bangladesh ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in New Zealand ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='29' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:6s:qk]</rows>
        <cols>([federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk] / [federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Consistent top scorers across series'>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AJ Finch&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;MS Dhoni&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;V Shankar&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' function='range' level='[none:Series:nk]' to='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter from='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' function='range' level='[none:Series:nk]' to='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter from='&quot;India in Bangladesh ODI Series, 2015&quot;' function='range' level='[none:Series:nk]' to='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:Runs:qk]</rows>
        <cols>([federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk] / [federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Most boundaries scored by players '>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column caption='4S' datatype='integer' name='[4s]' role='measure' type='quantitative' />
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4s]' derivation='Sum' name='[sum:4s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;V Shankar&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Bangladesh ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in New Zealand ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:4s:qk]</rows>
        <cols>([federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk] / [federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 4 consistent 6 hitters'>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column caption='6S' datatype='integer' name='[6s]' role='measure' type='quantitative' />
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6s]' derivation='Sum' name='[sum:6s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AJ Finch&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;S Dhawan&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;V Shankar&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Bangladesh ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in New Zealand ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='29' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:6s:qk]</rows>
        <cols>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 4 hitters'>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column caption='4S' datatype='integer' name='[4s]' role='measure' type='quantitative' />
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4s]' derivation='Sum' name='[sum:4s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Carey&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;AT Rayudu&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KM Jadhav&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;MP Stoinis&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;SE Marsh&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;V Shankar&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Bangladesh ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in New Zealand ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:4s:qk]</rows>
        <cols>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Scorers 2016/19'>
      <table>
        <view>
          <datasources>
            <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
            <column datatype='string' name='[NotPlaying]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Player]' new-bin='true'>
                <bin default-name='false' value='&quot;NotPlaying&quot;'>
                  <value>&quot;A Mishra&quot;</value>
                  <value>&quot;AC Agar&quot;</value>
                  <value>&quot;AM Rahane&quot;</value>
                  <value>&quot;AR Patel&quot;</value>
                  <value>&quot;B Stanlake&quot;</value>
                  <value>&quot;BB Sran&quot;</value>
                  <value>&quot;BJ Haddin&quot;</value>
                  <value>&quot;CA Lynn&quot;</value>
                  <value>&quot;CL White&quot;</value>
                  <value>&quot;CP Tremain&quot;</value>
                  <value>&quot;DA Warner&quot;</value>
                  <value>&quot;DJ Worrall&quot;</value>
                  <value>&quot;DL Chahar&quot;</value>
                  <value>&quot;DS Kulkarni&quot;</value>
                  <value>&quot;FY Fazal&quot;</value>
                  <value>&quot;GJ Bailey&quot;</value>
                  <value>&quot;Gurkeerat Singh&quot;</value>
                  <value>&quot;Harbhajan Singh&quot;</value>
                  <value>&quot;HH Pandya&quot;</value>
                  <value>&quot;HWR Cartwright&quot;</value>
                  <value>&quot;I Sharma&quot;</value>
                  <value>&quot;J Yadav&quot;</value>
                  <value>&quot;JA Burns&quot;</value>
                  <value>&quot;JL Pattinson&quot;</value>
                  <value>&quot;JM Mennie&quot;</value>
                  <value>&quot;JP Faulkner&quot;</value>
                  <value>&quot;JR Hazlewood&quot;</value>
                  <value>&quot;JS Paris&quot;</value>
                  <value>&quot;JW Hastings&quot;</value>
                  <value>&quot;KD Karthik&quot;</value>
                  <value>&quot;KK Ahmed&quot;</value>
                  <value>&quot;KK Nair&quot;</value>
                  <value>&quot;KW Richardson&quot;</value>
                  <value>&quot;M Vijay&quot;</value>
                  <value>&quot;MA Starc&quot;</value>
                  <value>&quot;MC Henriques&quot;</value>
                  <value>&quot;MG Johnson&quot;</value>
                  <value>&quot;MG Neser&quot;</value>
                  <value>&quot;MJ Clarke&quot;</value>
                  <value>&quot;MK Pandey&quot;</value>
                  <value>&quot;MK Tiwary&quot;</value>
                  <value>&quot;MM Sharma&quot;</value>
                  <value>&quot;Mohammed Siraj&quot;</value>
                  <value>&quot;MR Marsh&quot;</value>
                  <value>&quot;MS Wade&quot;</value>
                  <value>&quot;PM Siddle&quot;</value>
                  <value>&quot;R Ashwin&quot;</value>
                  <value>&quot;R Dhawan&quot;</value>
                  <value>&quot;RV Uthappa&quot;</value>
                  <value>&quot;SD Heazlett&quot;</value>
                  <value>&quot;Shubman Gill&quot;</value>
                  <value>&quot;SK Raina&quot;</value>
                  <value>&quot;SM Boland&quot;</value>
                  <value>&quot;SN Thakur&quot;</value>
                  <value>&quot;SPD Smith&quot;</value>
                  <value>&quot;SR Watson&quot;</value>
                  <value>&quot;SS Iyer&quot;</value>
                  <value>&quot;STR Binny&quot;</value>
                  <value>&quot;TD Paine&quot;</value>
                  <value>&quot;TM Head&quot;</value>
                  <value>&quot;UT Yadav&quot;</value>
                  <value>&quot;Washington Sundar&quot;</value>
                  <value>&quot;XJ Doherty&quot;</value>
                  <value>&quot;Yuvraj Singh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[Series]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Series]' derivation='None' name='[none:Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Runs]' derivation='Sum' name='[sum:Runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[NotPlaying]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[NotPlaying]' member='&quot;A Zampa&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;AJ Tye&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;B Kumar&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JA Richardson&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JJ Bumrah&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;JP Behrendorff&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Kuldeep Yadav&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;Mohammed Shami&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Coulter-Nile&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NM Lyon&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;NotPlaying&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;PJ Cummins&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;RA Jadeja&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;S Kaul&quot;' />
                <groupfilter function='member' level='[NotPlaying]' member='&quot;YS Chahal&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Player:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;GJ Maxwell&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;KL Rahul&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;PSP Handscomb&quot;' />
                <groupfilter function='member' level='[none:Player:nk]' member='&quot;UT Khawaja&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Series:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Asia Cup (Afghanistan, Bangladesh, Hong Kong, India, Pakistan, Sri Lanka in United Arab Emirates), 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia in Ireland ODI Match, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Australia v Ireland ODI Match (in South Africa), 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy (Australia in New Zealand), 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Chappell-Hadlee Trophy [New Zealand in Australia], 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;England in Australia ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;ICC Cricket World Cup (in Australia/New Zealand), 2014/15&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Australia ODI Series, 2015/16&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Bangladesh ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in England ODI Series, 2018&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in New Zealand ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in South Africa ODI Series, 2017/18&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2015&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;India in Zimbabwe ODI Series, 2016&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;Pakistan in Australia ODI Series, 2016/17&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;South Africa in Australia ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies in India ODI Series, 2018/19&quot;' />
                <groupfilter function='member' level='[none:Series:nk]' member='&quot;West Indies Tri-Nation Series (Australia, South Africa, West Indies), 2016&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</column>
            <column>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]' value='112' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]' value='204' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpcpni113j7pd17w58df0qfm3xi].[sum:Runs:qk]</rows>
        <cols>([federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk] / [federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Top 6 hitters'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='11' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='8' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='98000' id='12' name='Top 4 consistent 6 hitters' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Scorers'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='1' name='Consistent top scorers across series' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top boundary hitters'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='BattingSeries_Master' name='federated.1gpcpni113j7pd17w58df0qfm3xi' />
      </datasources>
      <datasource-dependencies datasource='federated.1gpcpni113j7pd17w58df0qfm3xi'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Top 4 hitters' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9125' id='6' name='Top 4 hitters' param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top Scorers 2016/19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69F244B3-4F25-49D2-873A-4802F84F91B8}' />
    </window>
    <window class='worksheet' name='Consistent top scorers across series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8862C9DD-1203-4A1E-A217-6204E8854408}' />
    </window>
    <window class='worksheet' name='Consistent 6 hitters across series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;India in Australia ODI Series, 2018/19&quot;</bucket>
                  <bucket>&quot;S Dhawan&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C20CB16C-2FA4-47FC-9FF7-4FD1C108B272}' />
    </window>
    <window class='worksheet' name='Top 4 consistent 6 hitters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;India in Australia ODI Series, 2018/19&quot;</bucket>
                  <bucket>&quot;S Dhawan&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01554A8F-7841-4D16-86A2-23A0CD0DA64F}' />
    </window>
    <window class='worksheet' name='Most boundaries scored by players '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;India in Australia ODI Series, 2018/19&quot;</bucket>
                  <bucket>&quot;V Shankar&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C0264ED-AD4E-4FA3-B4A1-5BECC5536275}' />
    </window>
    <window class='dashboard' name='Top Scorers'>
      <viewpoints>
        <viewpoint name='Consistent top scorers across series'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F460F5F0-74F0-41D6-B810-C741EB43703A}' />
    </window>
    <window class='dashboard' name='Top 6 hitters'>
      <viewpoints>
        <viewpoint name='Top 4 consistent 6 hitters'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{31BDD14E-736D-4023-B211-A2A545822F87}' />
    </window>
    <window class='dashboard' maximized='true' name='Top boundary hitters'>
      <viewpoints>
        <viewpoint name='Top 4 hitters'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;KM Jadhav&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DB130819-E409-4DDC-BD20-70F7BAFFFFE0}' />
    </window>
    <window class='worksheet' name='Top 4 hitters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;SE Marsh&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[Bowlers]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[NotPlaying]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[io:CurrentSquad:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Player:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Series:nk]</field>
            <field>[federated.1gpcpni113j7pd17w58df0qfm3xi].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99153A7F-B5D0-4B42-A33B-7EE4B8ECBF51}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Consistent 6 hitters across series' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9WY8dW3ag98Vw4szzkHlynsnMJO+tUkkqVUsttyRrAhrthmGrX7phGH4x
      GjZs/wMBDT8YsPvBgN3wiw0IsB/lHtTdkFsNWaUaXKWqe29dMpnzfOb5nDhjjH44ySSTOZKZ
      ZPIy43shM3astdfeJ1bEjr3XXiHYtm3j4PBAEe/bAAeH+8RxAIcHjeMADwjb0vnFz3/K+u7R
      ubKD3S0GxuWyzdw2NmB06/zl//t91ncOOdzfxbDen70fAvm+DXD4cAxqR7zI9vh7y0n2Np9x
      VGgymY6we1jC7ZHweP1sbG4xOTvH8d4+cytPmRqNA/D1Vpa/PbaIoRbpygmeffFTgh4Rt8fD
      1vo6ybEJJF+MfqOAYPSoDyTifolavcOv/Qe/geue234ZzhPgAeGOz/G9xwn+5b/9C/76Bz/A
      1noc7u8Qm1nFbFX48V99H80l06hW6fe6tDtdAIxOAfwjp3r2Np+zsPwUgGqxgGl12MupPPvJ
      X1JptPnBD35Mv6Wytb3B8rd/5aO9+MF5Ajwo9E6No2Kd6alJwrNJGgOReChJJBmm3p3mUTTO
      i50jouMRtH4XwxiOiX7x5Qbf+u5vAiB5wvzmb/4Gny+O8bXRxq3IKL4osViafG2DhSffxi/0
      ETwxEqkwIZ9yn02+FuGupkENw0CW78+frqv/tva97/Z9zP13fHzMxMQkgnC5vKX3eL51yNPV
      x7x5mm3bmKb5zu27rfxV3NkQqNPp3JWq91L/be173+37mPtvcvLqix9AdHn57IKLH4YXcLfb
      fWfbLMui1+u9s/xVOO8ADg8axwEcHjSf1Evw8d426sAiGA4zOTZ63+Y4fAP4ZBzAtgxUzWJl
      +RFbG2u8qOYIJGfoVjPooo+pseR9m+jwEfLJDIEEQUAbDNB1DcHlZeXxAt1WnXbXoFQq3Ld5
      Dh8pn8wTAEFiYWac/cMMIyMpkNyMj41SFkzGp6fu2zqHj5RPxwGAQDjOUjh++ncw4CK4uARA
      s9m8L7McPmI+mSGQg8O78Ek9AbTBAFsQkSURTdNwezwY2gBB+pijURzuk0/HAWyTZ8+eIQoi
      br8Pr0ukr9tk9newfTG++62V+7bQ4SPkkxoCuRQ3iksGUcTr9SBgE02N8+Txwn2b5gBomnbu
      mK7rDAaDM8dsy2CgX7E54Q75pBxAkkSmF5bwSCIud4ClR49YXpolGAjct2kOwO72Lm21ye7O
      Dpphkjva56vn66htFa2nsrm1g25a2IZGp9unkDvmOF96rzZ9OkMgQWJ1dRWAwPyrO74/GAag
      2Tx/93H48OSyGdLJKAcHu0ieOLGgQblURIpH6DTK7GUCzMUEKg2DQbePIvchFb9e8TvyST0B
      mo0GHbXBwBz+3Wg0AJNGo/VB6jd1Hcu20QY92p0etm2htloY5jd83+AdIbtkPD4/Ho8bt8dH
      rXBEq6shyy7UloqsuJEEEAQJWZIIhoK4Ffe1em3boj8YYJkm5lv29afzBACK2Tw+n0UgHcEt
      QTafJxLxks+VGBt//6EQxd09vNNj7G/uMzqappTdR3AHSMpuAr7rf8hPncWlxdP/T/themLi
      TPnry5Vzr41aTdO8Uq+hdfjhD7/il5/Oo1p+JK2OL5pCEgT0QY9A0IdhyXjd5y/3T8oBXqI2
      Kqi2TbNaZG1NQ7f8H6zubqtBcmyasVSYF9UyK0vOKvSHYCqd4DBXJuhrsZlr4PPViQV9qLUC
      gUiS8YXlC+U+qSFQMBzC5w8TiyWYTCeZml1kdXWFZPTV7WR3c40XW3sXyqutJrfZHyeKIoFo
      gvLxDtt7R4R8Lr5+9pxGu//uSj8wrWaLN7ug3W5j9NtnjhmDDp030kjUSjm2dg+xTjqx3W5h
      WW9qs2g1VVr1Mt2BSeuCFXrLMk913AQBAW84gTBQET1+/B6Z8fExJEslNbVEqdElqFy8o+eT
      egKkJ8bP/D0xPvx7fGL0NBRCcHlYmZujks9QrDWZmJmnktlDE71IRo+xcYvD4yyT09McHxzh
      CUaYnx4/V9dFjJ484n/pO995ZcNdNOwDks9kMfUOuVKdVHqKTjVLptLil5enabfbZAp1lpYf
      g95HN02e7WQIhKLMTo6ye3DM6pPP6KoN8sUaoXAQry+EcMalRHL5LBI6Lr/JoNuk06qh6iJR
      n0S5pSF1yzSFCL/8+aMb3aFld4CJsQATJxG/05OTw4Kx4Ub+qYn0pbKf1BPgJhSzh2zsHNDp
      DJidmaJZ2MLwj4M+3HLX7XQwjQGZw0OU4Ajog2s0fnr0Oh2m5hdRi9toSpyxVAxNLdPpdOg3
      spRUA61Tp6WqeGLjmNqw71YeL/Lsq6+o1ir442nURhnzghu5JNiISgCjnUNU/OzsZlCbDXp9
      DdswCMVTzM1Nf5CL8/3WYdsUC4ULhxW2bV/4mNMHXXraALV1dg+p2nr7mZxypUKxWDjzGPb7
      /ViWhS/gR5ZlfJE0g/Ie5bpKIBjEMk0kWcEfCBD0u/EHzr4/NKtF9o5yb7WHt6XezSxUr6Xy
      5vKQ1uvQ73fPDUfetc5AMIjHF8AlifijI+iNLK2OhuwNYhomii+AWxaQ3X68Xg9Br0LA7wds
      8rkCHn+QQDBM2O/G7w8iXjDyiPlduIIJsGRGx0cZSUUJBIO4FRe6puEPBckfZ7hoPidzsMPz
      5y/oaucXylRVvbRd/W4Xw7IZdFpnEoDdWVaIZrNJOBw+c8zU2vzwR1/wrV/7W2jtOi5JxLZs
      ssUqEa/FZrbFZ8sLtFtt/D6ZcqNHOizTdkXwWiK9dglN9DI3PU61UsElmOSKVUYmZ4gFfefq
      97gEdnYPiIxM0CoeUW7rpGJBFhcf0VZb5+wbYrD1YhN3OMH0+MgF5a/0h3wSX23kWFmaYXd7
      HUSF2dlpDvb3SYxO0msUUHsGkgBj42mOc0UisSRuycYt2RzmyszOTHF0nMEXjOIyO/TxMDc1
      dmH/vcnx2jqB2QkKRxmCkSRuu8fB7j4zq09QFD+lzB7+6AhjqRiVSgVj0KXWbDO7+Biv6+p7
      3U3qf1csy6LdbhMKhd5J3jRNut0uwWAQ27bZ2dognU5znMkxOTtH/mifQGyURjnPeDrJcb7K
      9MwYmf0s/lgCD322to/41vd+DVutI7jdHB5lCYZj7/cdILe3g8unsHeQw22r+N0SSD5s28Qb
      iDIzl6RdKxAZX6SZ36daKBBwjyG4NMqlHoLdo1AtMjM1TrlUIuhzMT09Ra7WPOcAAK1GDd3Q
      yOYPiXhTjHq6WNbVU2ggs7SyeqP22IM27mAMt1vB5fEzEg9QKVYZGDb7hwfEgh4U2yY1GaOS
      LxJMzaCWD2naJiKw/GiK9V9s4B+fR+/UME0NQ5beqk/1bptQaoJ+vUjHtJibGqPfrtJ2CfQH
      OuWDfcZSMUrlEi6Xi6mxCPVmH2/ifH99E6kWjginpjjc38ASZQq5Av2BTuVgn4jfQ6fdpt8o
      cFz0EIymGXSq9CyDuZP3uE6tBKEwvsQEg1bx/Q6BbF+M7/3qrxHzgWSbFKoqbo8bjAG2y0ez
      lMXljxLwKBiGgc/nx+3x4nEp+P0KumkRCA6HIP5AAI/vZNjiuXhO3R8M4/EFmRybQZHaILtJ
      JVNnUnpUqlUA1JZ69hFrmxRLlTc0WlQrtdPhlxhIIXVybOwc4Pf7cSkeJCwEUSTg9+H3B/AH
      g7hcHjyKxOHeJoo/RMAfIBrys7a2Q2piEr/Hjc/nQ1Fc9Ps3f8fwBPwoihuv24XP50OydDLl
      Jm6PD0W0sGzhZDgCAX8Avz+Ay+XB7XoLJxuoFOoXpzCpVt/sH8A22d54wdr6Ftqgw1dffMH2
      wTGm3qVSOT8kKZaKvDnoqFSr9DttBtctYtkmB4c5yrkjwrE4tiAT9LuxGLbbHwhg6AaK14fX
      48HnVYb9ZBvkynUkQUDxBVAUN373sOy9DoE+JNfV36jXyGePqXYMfuO73+H46Ai3YFFQ28Ri
      Y0ykgrzYOsRl9Wj3DGYWpjk+yoDgJRJyEw6H36p9RrdOmyAR380esh9N/7WLrNVcrEwE2Vzf
      RAnG0NUygiAie7y4RJlILMzhUYbk2Ax+W6Uy8BCX2xS6NiIKPqGDFAjQaggszI+cGQKtb7xg
      NBHlKFsmFB/BbJc5Kqt8vjiN6PWSO84RjEZplkvE05OMjcTPDIHumgczC2QaKp7AKCPx4UXW
      aXfQNYvFlSdo3frpeZLbz+xIiONilYWlx/jcMp12+zK1lyL7ohdc/Pa1q5ofC0a3gTqwyOby
      uLwBliai9Fo1KmqfbrOBYegUikUEUcA0TUzDRDx547UsC+GKTFq6YTCzsIg9aGMJPibTSQa9
      LpX8EfWegWna+HzeD5Is7IOsA1j6gGq7TzL62h3O0qi1BsgihEKvPFvrqWztHhKOj+CxexTr
      LdITs5hal1Ty3cMZZFcYS8tjy8MhQiKVxC1JyEA0GgNBJJWIIUkCHglmojIHu7tEYkkU+ZV9
      jUqBr56vMz3/mNnJi+eXtVaRhhAjFTy7EaeWP0Z3h/G6XIQueId5ne3NDWYXHyG/OY1iGXQH
      Jj7v2WGg1lPp6iKiYBF67U7ZU+vsHmaJjYwjai2qDZX05BzmoE0ymTpfsRJgUN+l6h7B53aR
      SMSJBH3glhib9iPZBn3dxO3RiMZj+CMRpNoORUtmbjrJ+otNXMk0sVAISTg/pEkmUng9CrJL
      JhpL0G6UaA4ERhNxIu40xt4BPp+Xdr+Nz3dxHx3vHZCemzlz8RZyGYLhMC5PAEV61Wfrz75E
      M2FyfpmdZz9B8UdZXl0kf9RkZm70wwyBzH6LnXwTU62g4WZmLMZxLovkHyHoFpHtAcXmgM+f
      PGbzxXPmHq2yt76GLUjMrzxme30dBIHV5YuXs1+vf+fFVxxmikwtLJI5PGBkcpGVhclbDzFe
      l19fX2N5eZW/+f9+wMjoKPlKG4/Xi6i30XSLidEoW4Ue0YALWXKhiBaTcwtsb2ywvDTB5kGd
      diWHJbj49ne/g+sN/ZbeY2PtGd7UErLZJuiS6IsWxUKD0YSXL9by/NKjaUr9HiMhP/lCmfGx
      JB1DQbA1JKNPpa3z+eojXjx/xqPVJ6yvrYEksfr4EevrGwiCzfLy6oXtu2vuchYIYGdtHX9A
      JNcyCHo9dFtNOgOdqZEQ/vgEa1/9jNjYPKtzEV5sNXm8kGDjII9g9FiYGeWo2EbrwPLqh1lr
      OMUdiBD3eyjUWqwsP0KRBFS1Q6PZoJzLoV8id9Xj9E1a7R7zj5YwuirJsRkSkbsfN74kmkqT
      CilEUpOIto7bH2I0EcGwbGYXH+F1K3gEgwEyrpd3cnt4QcSSacYT0Qvnuqv5Yxq6i2LuAFVV
      6bfbWKILl2wjyl6mp2eQjD7p6Vm6agtdLVFpG4CN2u7QbDbI5vOX2v02/fnesG0MQ8c0LWzL
      QtM0LNvGtqwbhaMIgszi41Vks4PsjxIL+bFti1qxQHxsko5aB9FLv1ujUSujeAJYpkmpUCYQ
      fhUa80GGQILkJhYJIdkmEhAWLTa3D4mlxhH9brpNk9SoGxGYm51ma33tdAi0vb5OenwaQ7tZ
      ctWnn33Gcb7K0soTskdH+PyXDTVstl48o68ZTMw/Zn/tF8jeAI9XlyhkqkzPjPLi62eYLh9P
      lxfPSE5PzwAwnh7D7fEQ7h3jn1vkYPs5/pFp0vEguiBjudNUMztEEtMAjEb9lFSLmclRBEDE
      vjB3vu2J8L1fWaJSKqH125SqbcbjMbAF3IEoUmUPQkkCioTh9eCLJImHQ7hcLryKQKdukB7x
      AjA7PcH62trpEGh9fYP05CxG//JFo5cYfZXnm/sEI3HmpsfPJL5tqS1CwXe7owO0azk2M3Vs
      XWMyobDfdOERLcZ9NsLECokrgmfHZ6aRJAFRgvTUIj21gSaEiQTcSLJMLl9maiwNgotHi1NU
      1QHzkykyZgsllCQZDRBUhkPhBzML1Gw2CfoUfvbzL/FF0zyZi7G2r7KymGZ9fR0BhUezMXaK
      Gmanz/LqNL/4+RcEUxPMTqZp3aB9pmkiSWenHDVNw6UoJxePjWla5865if3vm4vqN3pNvny+
      y9TcPK3CPgXVIuWXEAMxLL2LaPTJlZuMjiRpdnQ++3wVzwXrGhcNgQ5evCC1vIKa2aHVbhOc
      /Bb9zCayy8TzhgM4s0Cv0e12z0UrvuR4f4e1tTXK9Yvvbq1KCV8kQatRA8nDoNOg2ygjeoY/
      TKVcwx/ynp4/u7hCu5DlpnvJLrqwldOLH0BAEgXa7ftLhX5V/72JLSqsPlnheH+HZktlPJ3E
      5Q2yMDOJaZrUGy2mpqeIxeKE3RaN9s3XNJKjUda++IqjQpOQV2Znc42WJfChd03c6RBoc+0X
      6LbE1NwiRreJLxRDMDU0Xadv2PhcYKDgkSxaPYNEPIIAdFtV9o7y2JIbu9uga0o8WZ7lxz9/
      zu/+5q+xubnNwVGe3/7936ZQyCNaKqqWIKS0aXY1PIEoI/EQk7MLvFh/QcIHO/tHxKMB8tkC
      U/PDIUw4NUa1e8zE8hKIbh7Nj5GvdXg0O8Hh7jamJ8lYLExYcQMinWaJ2OQMbuD1gOYXX/8c
      W/IwPjULehfJE8AtWtQabVx2H02JolhdPIEIEgatdp9kIkq1XKZUb6HYBlNLyyhv3H6ef/Uz
      kH3MLy3SbtSIxBOYgz6GodGzFNz0EZUAotmnb4pEI0EEhjNTmXwB2RulUytgyV6WZkf5cm2P
      3/iVp/z8y+cgKfzyd55SLBVpl/IEJ1cwGseo3T4j04/wXzAWk10ujnf3mF18jE8yqKga8WQc
      BJianEKeGue4UCcY9FFvhXENatRUkVjQc+214o+l+ZXYq1m0kZm3vNiAg5111L7J6MQMHjRQ
      fLglgb6mMRj0CQd8tHoG0YCHcq1FKpVAfOP9504dIBaLksnXaJeOeb53TCAUw6X3eLS8RKnW
      orT3goHgZyLpRwmliMciCAJ4g1H87jLeaAC16iElDrD8YcZH4iC6WJifQVD8GM0K3vAI6XiS
      9bUWiiyi6xo++exneOx+k7blxSwUWXy0yM7OPmPpEQTJxfz83Ol5/lCMhVAMgJmFR6fHA4Hh
      e0N6cvbK9urdJsV6B4kqtjFA7Bt403FctsnR/i4tQyHml/G43XRbNfCGEQQYiXgoNvpMxs5e
      KNFohFKtS/lwm+1siUgigdbo8vnKOLlKg/LhDoI7SNRrEx2dIRoOggDhWIJSuUIk6kIRZ3Hp
      TdzRFKl4BVGUAAtBFFArBUKJcZIhD/UBGAK4XC6qtRr+kei59gmizNxJZj2Aydd2aQVOEg0s
      zg+HTUsLHz7xQCwao3aYxdA6/OSLL7G9IUaDCqOzS5TLZfY2ijQ6OuNjo5iCm1gywZvbAu50
      CGSaNh63SEPtEo0nmZ0eJ54aJXSyHTAYjrC4OE9qZIRS9ghVVdEtKOyvU2xpCLjpdYocNVRo
      1clms+RLVbLHGcYmxinX2yQjXg73D8nmszQ6fQKBAFr/1ZDC5/MhyG5SiQjJaJD1Fy+IxC+Y
      7wbAeqfhiCCKKIoCtkA8kcCtyNiWQb05HHoZ/RZ9y4MigS8YInqyztFs1NENi/5Axy2ZtPtn
      570sG2R7QEeHWGKEqfERRtIT+NwygiASjsRYmJthJJXi+PiYbkfFtGFn7Ss6poQoeGnUDil1
      +/SqRbLZLIVSEVHyIFgmJVUn7oWDwyOOjrPEEkkEQWAkmbiyvbZtkjk+xrRsSrkMnb6ObVs0
      myr9TpPt7e0bZW+wDI39vV26577HatN+h8VG3TDx+z3Ua03C0RiL87P4wzGS0eGQ1ucPMju/
      QHp0hH49T73Vof9GFOmdvgQHgwFM00KWZUzTQBCl4WyHIAynuGwL2xYQheGPXa9VSSRT2JaJ
      YZqIkoQIWAw90zBNRFFCFAUEwSaTLTA5PoZuGNg2yLJ0+u2oVuuyaM9X9oXDITIHe0j+KB7J
      pDcwcbvciPaAaltnNOYjU2ywsDB3bgHq9ZdE0zSGL7OyjCgI2LZN7miPTL7Bt7/7SyiCgGkY
      CNKw/S+nHQ3DQJJE9vcPSUZDuIKx0yjNZrNJIOAfOoEknZwrAa/6y7ZMbEFAwMZGoFatkkym
      sKwTeyR52HuCCLZ1+sJt2za20afU6DM+EkfXdWxBQJZETMse9t8VL+GdZh213aHe6SApIQbt
      GqOJEEf5Ft/+/DGGPmB795jVlUcXyr98CS5nDgiOzeCVJdRaCUsJEnBDp2fgURRcokGh1mUs
      GSJTrLGwsIAsXv4SbFsWxsnvb5nDvhEFAVEUsSyL4aSDjSSJmKZFu1XHH46jyK/u+3c6BBpe
      rMMXQVk+O6gcjr1eVSwCydTwzixIEsprL5Avz1LeeKmcPNnx5XK90i2KN3+ImZ0ym0cVQsEu
      XslgcXmFva1jGrUMkssN9sjw4rbs8yuwryFJMq+bJggCEzMLTMy8Oia7zg+qX9r9+jDsnN43
      zn2JKADi2Z8rddJ/Z+0RT/89031ygPHR4TDFpbwaMt6k+3x+H4fZAumoi74/CbpKcnScSrWL
      KEpUchnGZ+ev1TM1v8D29g6KW+E4X8Pvb+JTYP7RCgfb+7SaRUREBGEcwzAwrvkdBFHEddIA
      6Y0P6L28Ll62TxRFovHzkQTfuFmgm1Cv1y88LnnCRP0yiXicaDyJ2yXh9bqJx2MEI3HCAS+G
      1qdVLdHs9mi0OiepVa7Gti0KuQydnka/06JcG26/bKsqlm2TPT7g4PAY/aLtUd8AMge7aKYF
      3gTFna9B8pA/PqBYKlBXuwxwE/Fefy9Vm/Vh7lZPgFjQQzyeIBJL4FVkvF4PiXgcXyRBOOjF
      0vs0KiVavYuXR1v1CuVqA8vUyeUKWDbogx49zcC2TXLZDAPdROt1aPcGqKqKqfc5PDjgOPtq
      k9YntA7QoHB8hIYLxQWmoROMJFHcXkyti9/vv7F9nU4bry9wZjfTVe3rd1q0+wa5fAHRNvBK
      EBqbYevLZ3zn7/wt7F6XvZ1tFlY/xy1dfEe7//77+EIhup02Hp8f27LeGAIZFPJVCqUCQY+C
      PxxCHYDVyKEk5xDaRSwlyGh6lHohg+Lzsbmf4dd/+Vt0ez12dvf57OlTBOGTegLYuLwhUkGR
      tqmwsrqI3rNo1gp0u2+3r9fvD1y4le8y3F4flUKOiclpFI+HkUQATfCSTsVAEFBkG9kfv/Ti
      d7gYnz9wbtpyiIytdwjHUpiizEgyhW3oTE5PIQINtYMs6GQyRTQLkskRokEfgihh91tER6dO
      94h8Qg4wTMtR1xSmRyKATDgSRNJ7xMffb26ecvaA1sCk3ekgGAO2MioBVLLFAplMgWKhwtTU
      2Hu14ZtEvVzgxfoGfU1nZ3Odcn04m3SUK9Jt1VhbW2Nz9/ByBUaPnYMc3W6XmN/NV8+eEwqH
      2Ns7JHN0zOhoklpDxerX8cXHqJayFAsFitUmxWafydSrJ90nNQQSBZlg6NV8tG2ZZPNFxsfS
      184SXa///bbv/vvvww2B+r0enUaefKFDfHaeRv6I8fQIh9kcT1dXMXot9osqizPDSY93DYUo
      lUokk8krg/8+oSeAcObiBxBEiYnxsY8j+tHhlFa9RFP3kI77cSkuRFEkFIkiiQJgc5zJMzF+
      eS6fm5JKpa797T8hB4C1r78gV6qRO9ohU6jdtzkOl9BoNOmpDVyxFMWdF/jDcXJHe7RaLZqd
      AZ5A+NosFnfFJ5UZzhOIMJaMsrlVhl6ZYr+Gb2KB0uE2icRlq8EOH5qllc9O/7/62ecn/4sz
      NjVcHwn7P9xHzj8pBwDQeg1K5SrYFq5kFHnQp9PTuHqx3+Gh8kk5gKFrdPoWv/Kr30Uweuim
      SS6XY2Lim5ah0+FD8Uk5wPjoCLrgwqNIoARwA0unX4hxvhPscJ5PygEC4fMhvQ4OV/FJOUCn
      WSVXbePq5SlYSX5ldR7pk5rncrhrPikHqJQrmLZMLBhEiToXv8P1fFKXiD8QoNuqgydM9mCb
      Rr1Jv6fSHXwzsrE5fHg+qSdAYnScxOhw+fzNTWDNb85Xihw+IJ/UE8DB4W1xHMDhQeM4gMOD
      5s7eAQzDuNfFpm736tSJ15XfVv9ted/677N+27bp9/vnPozxtvLDje53y505gCzL9xrPDlxb
      /23te9/t+9j7712xLGsY8nyL7NCSJDmpER0c7hrHARweNI4DODxo3soBbFNn7YsfU1J1bMvg
      R9//4aUftXBw+Cbwdi/BosT4aJy2YZM/PsLtC2AxfEmxLAvDOP/17rfhqNRiL38+EdVYPMDS
      ROxK2evqv619d9G++9R/n/Xbtn0r/ZZlvTf73soBBEFEFIYPjU63S72cp1KdYTweRhRFZPl2
      k0pfbhf4kz//+tzx3//VeVZmrt7SeF39t7XvLtp3n/rvs/6Xs0Dvqt80zfdm31tpNLQeufoA
      Qcmy+Pgp45OzeAIfPi22g8Nd8VYOICteHq+8+rKgz7n4Hb7hOLNADg8axwEcHjSOAzg8aBwH
      cHjQOA7g8KBxHMDhQeM4gMODxnEAhwfNWwfDPfv5DymqOsXsIc++/pJi7X53Mjk43Ia3DIaT
      mRpLoRo2Y+lxOp328FuzdxQMZ1kXb5mzLfta3ZZlsXVcYSd7/guRU6kQ41HFCYa7p/o/mWA4
      sDENA8MwONg5IJSaIhp0I4rCnQQriZd8mU4QhWt1i6LIl9tZ/q+/eH6u7O9+b5E/+s0FJxju
      nur/mIPh3moIZBka9b6M1aniD4Solwt0+s6OAIdvLm/lUpLLw/zi4unfI3dujoPDh8WZBXJ4
      0DgO4PCgcRzA4UHjOIDDg8ZxAIcHjeMADg8axwEcHjSOAzg8aN7OAWybvY2vafRM6qUcv/h6
      Df3uM1Y7OHww3mol2LIMAl6Zdt+kU1NZXRrl4KjC3FQM27Yxzdt9jO6y/PE30W3b9pXyt7Xv
      Ltp3n/rvs/7b9r9lWe/NvrdyAFFy4VEUNADbwjRMBFFGEIZBbC//fXcuCYZDuMv9G4UAABse
      SURBVKHuy865G/tu37771X/f9b+r/ru7vs7z1pnhjkstLE+GqVSc7aM6jx8/QhCGxoni7V4p
      Lm2fwLW6BUG4VP4u7LuL9t2n/vus37KsW+m3bfu92ffWmeFWP/+l07/Db36L1MHhG4YzC+Tw
      oHEcwOFB4ziAw4PGcQCHB43jAA4PGscBHB40jgM4PGgcB3B40LyzAxQyB3z99de0B/eXzMnB
      4ba8c6ahVkvF67Jptgb44uK9B8NZloV1ibx1kpnsNvbdVv5D6K80e7S6g3PHY0EPkYDn1vUf
      FluY1vnw34lkEEWWLpWzb9n/LzPDvfdguEFXRRfclA43sHwpFqZGLxXUDIvRkQjNXhdB8N1R
      LNAlwXA30C2KIsJlwXQn8rex77byH0L///3XG/zbn+ycO/4Pf/cp/8nfWbl1/f/kT75PrdU7
      d/x//m/+gKlU+FI527Zv1b7byl/FGQc43nuBb3SBtb0SQX/9SgdIjyQo1lRm5yfea7TeS26i
      +9JguLfQcVsbPkr9ws2iad85WvOaaN2XT/aPPhp0Ymqef/3nf8mv/4d/SKOUvVIwPjJO3EkN
      5/AN58wzpVjI8PnqHPlah3KpeF82OTh8MM44QGp0gufP1/jyB/8eVzB5XzY5OHwwzgyBvKEE
      /9F/+g+B+9+d5ODwITg3DfopX/j/6keb/NmPts8d/53vzPJHv7V6a/1/+v11/vynu+eO/+F3
      F/j7f/vxrfU73D3390WGe6Dd1SjU2ueOqxfMnb8LanfwXvU73D1OKITDg8ZxAIcHjeMADg+a
      d3aAZrXI87U1utr9JXNycLgt7/wSvLOzi8cfwrTs08+kluttSo3z3w0O+92MxvzX6rz0M6n2
      zT6Tepn8y2C4S4PlbvgZ1uvPubz+u9B/HZcGE97I9hvUf2n/mVfK3vQzqTvZxoXBdjMjoY/l
      M6mvULx+FuYnOcwWWJwbRxRFfvQsw//+b746d+7vfGeW//o//tVrdV76mVRBQJIujzYcyopX
      youiiHhFsN1N9F93zmVTyOId6b+Oq4IJ76T+y9onSlfKvgxmu07/P/mT79PuaeeO/7P/7g8J
      em7fPxfxzg6wMDfN3mGBuYXF1zr+8jWE+wxEu07yZea429pwVfH7DEa7geL3Xv/7DIbjQwXD
      vQ3eQITlx5G7tMXB4YPjzAI5PGgcB3B40DgO4PCgeVCxQNfxp99f51/9cOvc8T/47jx/8J3J
      e7DI4XX+8T/91/QuSMLwP/7j3yUe9vFf/k9/xuCCdal/+l/9HtGg90KdjgO8Rm+gU1PP73nt
      9vV7sMbhTepqn+7g/G/xcn2nrvbpa+cd5LL1GXCGQA4PHMcBHB40jgM4PGje2QFs2+KLn/4M
      Jy+cwzeZd34JLmUP0S0RExBOguGsCwKZAOwbBJvBFcFwNwxWu20w3HXytw2Gy9c6VJrngwVT
      ER8++f0Fw93M9ncPhjPNuwmGg8v1W5Z4ablhvKz/kvIT+54fVM710Ts7QK3eQK2XqFSbjMfD
      V2buEkQBWb6+qkuD2W4gf1UwnHhNMJx4ov86+ettuFxelmX+3c/2+Bc/2DxX/ke/tcLf/dXp
      G/XRVVwajHcj268/57JgJ0mSrpS1LOtm+i+J2pIk6aRvLy6X5Zf1X1J+Yt9//yd/jWacnSZ9
      5x5ffvptxicb+COXp8RzcPjYudUtJxRxguEcvtk4s0AODxrHARweNI4DODxoPmgs0N9sZPmr
      rw7PHX86N8Lv/+r8hzTlG8m///k+X27nzx3/9aeTfG/1/oP1/td//jcXxk3953/4LVwfacLB
      D+oAmbLKX399dO64R5EdB7gBu7nahf03mQrzvdtndrw1P3mRpdHunzv+D357lbDn4/QAZwjk
      8KBxHMDhQeM4gMOD5p0doFUvs76+QV+/OP7HweGbwDu/BMtuH+PJLvlii5nxl+EQl++8sW37
      0mCq0/IruK78Stnryu2h/uvOM0zrwsxlkigiicJVzbuR/dfpv0L71frtYblp2ZfqH9ZvYl4Q
      0Hd9/Tdrn6abXNTLLkm6MqfSsGOvyjt0df32Ffa9swP01AbVjsDiXATrNBr06u/8XhaNeVp+
      jfxVXFf/VdGgL/Xb10SD/p//7mv+9Psb58r//m884h/93tPLozFf6r8iGtWyLP6Pf/Mlf/bj
      8x/w+KPfWuEf/NbKFakPr9b/sn3/27/8gv/nZ3vnyv/R7z3ldz4f45/985/xFz/fP1f+n/3+
      Z/y9X1+6MjXi8Pe5pPwkmvO/+B/+Ba3u+cxv/8t/+weMxgKXy1sWQ7999/ovK39nB6hWq+i2
      TKszIOx3Xx0NKryMtryu/PLUfh9DNOht5GVZviJac6j/umjOS1Mf3rT80v4Vr6z/pfxVqRGv
      isYUr4nmvK38q2jUty9/ZwdYWvnsXUUdHD4anFkghweN4wAODxrHARweNI4DODxoHAdweNC8
      +0pwrcTzF5sYzkKwwzeYd3aAfLHK4lSUw0ztLu1xcPigvPsQSBCRZAn7klxADg7fBN7ZAVKx
      IGtbBaanEndpj4PDB+WdV4KjqTGiqTHgJJDMthEFG4/rvE/JIhiGgcg15QJXll+FZVmXykvi
      NeXC1fXfhbxhGMhXyFuWhSxeVj7MLHdZuXhdOdfLX1X/S3m3LF5Ybp98JtXjurzcsoZl2jXy
      hnG+3HpNfpgh7iwvM9N5XCLYF5S/pl8UzsYDCfZtwixPDbSo1+t4PJ5XjbLtM7ElL7ODva/y
      drtNIBB45/Lb6n/f9t93/70uf9FXH68qt22bbreL3++/tPzlp1QvKrcsi36/j8/nu7H867Zd
      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
    </thumbnail>
    <thumbnail height='192' name='Consistent top scorers across series' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most boundaries scored by players ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 4 consistent 6 hitters' width='179'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 4 hitters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 6 hitters' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Scorers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Scorers 2016/19' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WZAtW3qY9eW457n2UPN45nvOvbd1e5BaUtMt0Q5ZGAibEIGBBwI9AcEQ
      5gEeCHcgHnhxBNiAEEEY7ICwHYHBdhiwZKnpbqkHdfftO5y55mHvqj3WnqfcOfBQp+qcqj3V
      PjWdW5VfRN1zV+4/V/5rZf65Vq71r38JlmVZ2NjcUMSrVsDG5iqxDcDmRmMbgM07R7te4s9/
      /GN2c8Wu35aXlwee++TJYywgvbXCn/7wR+zli6yvb/SVl8+qrI3NefP0z3+AOv81Ql4Hn/z0
      x7REN6qo0W4Z6EYHBY3N3SLzMzG2Unk+/PLX8DslLL1GvtRGANafvGThG1/nh3/4p0iihWg0
      Wd7MMjURZmJ6jp3tbcqFvN0C2Lx7fPCN34LsC/7ku9/nJ588oVGp8PLlSz74pY8o5LL86Z/+
      GYJep1xtUa+UaXUMAFY++5Rbj95/lUuHT372GV/6ypcB2NvbI7f2DEuR+Gf/9P9mP73D872a
      3QLYvHtkU1s0OjB/+x5Bt4I7HMYXcON2yMzMzuKen6LQsvB6vXicCoZhgmWyWzX4hu/gkY5N
      zXP//kOCMhSzM5jtComZeSbn7vLnP/gJX//1v0Truz9EOO9hUNM0sSwLSZLOM9uRsCwLwzCQ
      5eP2ret617F+jCI7ig5n5aLyHZWz1s95YxkayfQ+05OJgXLV/TSZmsXSzDhwAR/BhmHQarXO
      O9uRME2zpw71ev3UeYwi2wvLsmg0GmfKox9n1e266PAmgqQOffgBfOHE0cMP9iiQzQ3HNgCb
      G821NoDPf/EzWrrt6WHTn3fnK+acMZr7CKqHbL5Ip14g7FEomn4CgavWzOZd4tq2AMntFLqp
      k97dpd3WaNSqGKbdGtgc59q2AKHxWcbHJ6hWyujtOsVaG7/r6oZmbd5Nrq0B+P1+BAH8gQAQ
      IByDcrl81WrZvGNc2y6Qjc1puNYG0G416XQ6bGyso3X0q1bH5h3k+hqA1eaHP/gRhVKZ7a1N
      6s2rnZ22eTe5xgYgMr84w146TzgcRHnDb6XVrKPbI0I2XOOPYESZcDjC+LQPwdDQEV79YLH8
      7DP8iTuM+VVcbgfNpk52L0koEuYXn3zOh1/+GvZ40c3g+rYACARCYZyqgsPlweNyAGC0ylRa
      IundHVI7STp6jeT6Jvt1DVN0MD4xQdjvvmLdbS6La2wAvcnnity+d5+Qz4kiWbx8uQ4ODy5J
      Z79UpdOoUKxejBenzbvH9e0CobHy7AWh+BiZvT2iE3M4JIhPzwMQC/tPyM8e/DM3AdhzBjeF
      a9wCdGgbDlyiiYlIMrl11QrZvINcYwOQicbCWKYFoojP6+spZZkmlWqVSqXa9VurXuHl8grV
      ag3dNE995XazRqtzIL+9vszTpy/Reyy8q1Urff2TTKNDvdHC1DVqDXsI96K4xl0gB/G4Fwjw
      MBIHDro1nWaNrVSaQMBPJpNjdm6O1F6GSDCA3qqyW6hy5/YtAJZX17l3/wHZnS3Wt1rEE9No
      lSya6MKnWuT3K0zPzZDc3MQTjOFTDdL7dcZ8EoZ7HI8EHWQePFigXEiTTO8Tm5yhlk9S1yXc
      skE0PsH29g6JqRkKqS0s1ctExMPG1g7eyBQzMQ9ax2T5xRqG5Obu0tzVVek15Bq3AL3RW3Us
      hxdBb2O2q+xkD2LP5PN56vU61WyGYkMDQJQVFEVBlhUWbi1RL+5TbzTY2t6m3mxzb3GC7Z00
      vnCCZr3I6toa7VqF+qsoBQD72V2ePl+h3qgxO79ApbBFRwghWQfXaDcaGKbJ9s4mkuJDFXX2
      8kXu3r2FLIChNShVagiqG0W05y7Om8szAMsik07Tawm+ZVmYPX7otBs0tTbVyvFRmWqlMvRy
      1XyOaqtJrdE8dlxSnERCfgzDQFKdeJwOfF4PPp8PwzBweTwo0kG1RHwunjx9hiU7USQJj8eF
      aZr4fD46rRpPV3ZIxIIkN9dQnD4S8Tiq24vf68WhHOTh8XjANFFdHmRZwuOP0qntkc6XcXu8
      WJaBIEp4PV68Pjduj5eAS2V5dRPF4UCUHbhdBzp6PZ5jZWnVanRMi2I+zWYyjd5psfJymaZm
      YFkWuzsbZArlEdbvGlQrtVPKXg/OPSpEp9NB07SDG/8GZqfOD3/4MY+++st06iVUWcQ0LFKZ
      AkGXyctUhUf3lqhWanjdMrlSk/GATE0J4jJFmrUsHdHF/OwkhXweWdDZy+yTmJ4n5HMdu5Zh
      GGw9eYJnZhK9I9AuZWgLLiZiYQKnXBFTLpcHyu7v7xMOhzG0FrW2ScB3fO7ANE1qtRp+/8nR
      JpO1ly8RXAEWZiZOpcubWJZFpVIhEAiw93IZeTxCeq/MnfkpVl4+Z/HOfURBoJbbpiKGmQi7
      efLpz3CHxpmOBdhKZpidm2ZjK4kkCIiyg3DASSG/z+TCIu1qC71dotyCeNBNOp9nLD5NMbND
      IDZ1NHo2rH6+KFzaN8Du+gqyW2V9axenVcPrlLFEF5Zl4PKFmFuIUttPE5q8RXlvg0I6jdcx
      gaBo5LJNBKtJupBhdmaSXDaLz60wOzvN7n65ywAOMQ2dZqtFqVin3NpnIhY+t/KEwwd5SaqT
      gDrKmSKLd+6dmx6dVhOvL4CqqiDIOFQFAWjW2wRn/KiqiC8URZFNKtU6nU6F5MYOaniCTnEH
      j6BQqDa4fWeJlbU1TE3GkgUiHoGtZIHbDxdIrSbROgYdTTs3vd8VLq0LZLrC/PJXvkbELSBZ
      Bul8BYfTAXobS3ZTyaZQPCE8ThVd13G7vTicLpyKisej0jFMvD4vAB6vF6fbgyIruJ2Ontfz
      RiL4PT7GgmECAS9zswfj/JXq8e6T2Wny9PFjNpPpo2OHMulMBoBiPkfbMMlk0pykkC+QTWcY
      1IxmshlONrT5QoFWvYZmHB9dSm2t8vjxUxptjaeff8qzFysYpkk6m+vK1+Fx4w/Hae2nWFnf
      Jhbx8eTxEyqNNvGZGbZfPGZnL4fX68Xtdh/E8lGcuNxuvC4Vn8+Py+3G1Bo8e/aCscQUHp8P
      h9AhU2oTHQsiSzJutxtFFmn3NACNTLo7hmehkO+q62a9RudEebVqgZXt7noFqNV6d8cy6Qy1
      rhV+FpurL3n89Dn1VodffHZQ9mo+Q0PnoMv65Ak7e8fr8dK6QJeJYRg0m028Xu+x4+Vy+WCC
      y2hTrVaJzt7HaxZ4tlPnvbsLJDdeonjHEIwWgUCQ5O4uD+7dY3v5OZrDSy6zx6M7i6xvpRif
      miS1nUIzBXwOmXg8TGovy1gsRiGfwxOIEva78Pv9PH/xjMRYiO1UDn8kjl7NkSzUeLg4g+r3
      k9rYxB2OMR318nx9j3sLcV6s7oEgMJ/wsVeDZr3Mgzu3j3WBzot8ocBYJDLSOa+7QHWePy0g
      WPs0DZG5qQQ7uzkkRcXnduCQIZOvcPfBA/azu6iqxNZ2Dn84zOLsJGvLy2imyfxEmKLpp1PJ
      0qwWcQSibL58yvzdRzT2dwnEpqkXMwjOAJ16lWDQiz8QYGNzm3BskjGvwEa6xkLMwdM9nWg0
      Qiu9iiqCZ+4+YnGLrUKHe7fn2d1cpaJBxK3cvFGgWr1Gx5J4cHeOarWF05/g3nycJ0+eYggK
      s5Nx6vXDN4/JxsoKLR1cbjcORaFULNJp19l8+YyxhfuEXvX9d7Y2MYFscotKS8cwjq8/6Og6
      80u3sNo1LNHNVGKMVrNBrbxPUzfZ3U0DApZpYhoGCAe3xjBMRPFib9OoD38vVLePRMRPKl3k
      3v27OBSBWr1Gab9IeT9NvW3SbNbROh2m5pYQdA3LMshm0xRzGfLFMo12h0qlitvtoVFvEp2Y
      YmYihujwMOZXqNQ1dnd3AWg06lSKRXTDYDedRhAETMPAMAxE8cDx0TQtDn0g/WOTLE5FePLk
      MzY3kpiGSautI33nO9/5zplL/wamaaLVCtRMF25VeuN4i1KxQUc3cTiUo+O1Yo7ltQ2QXZSz
      SbZSezi9AcqlIh6Ph1I+zerGJg5PAKf65ieLSbVSw+Ho7gJZloWu67RbrWO/t9ttXE4XHrcb
      l8uFICootFnb3CEaHyfo9x4cFwQkScLpdDE5PY0sSQRCIZyqglORaekwMTtPMbWJw+MnFPAR
      i41RqTaYmV+g06jhC4ZRZRGHw4GAgNvtQVUdyLKCqdVo6CKxsTAOl5NGvcnYWIRgMISl1dhJ
      F1lcnKecT1M3ZOamEoiiiMftOiqH0+nsKnezWuTzz59SaWqEQ0EEoUsE09AoV5o4ncc/XMxO
      g629fUTB7FmnJ3lTB0GQcHucuFwuggEvG5vbBEIRfB43IhaSw0M0OoYiiThdblSHA1WRcCgS
      nkCUWwszaKZEObuLxx9EtHQkh4dYwEW21CAc9ONyOqlUqoQjY4SDATweN06ng3pLO6o7rVYg
      XWyzODfB9toKY4lJAh4XqsuN2aywsb1LbHyGkN8BkoNoJHwxXaBaepmCY4pGcgPB6SYRdrGX
      S+NxJ1BdbqzWPlVN4P7dJZ4+ecz9Bw949vQZqiCxcO8Wyy/XsDB5cO8eL598hjc6STzsY3Vl
      FcUTxGru4wzGoGNg6nUqLQu/U6TeEbl7ax7TNGk2m6R2UpidBq2WxvT9D1CM1rmNAg2j/yjQ
      2RjWBVp99pzp+/dIr73EUn00SzlM1UvQBcVSjejkBGvPVgglEnidKl6njOofI7u5SmLpNoW9
      JM1ahUbb4Pb9h7iU3q3PdRkFusC21cQbiOFzyBSqTe7fXUIydarVGuVqndzuHr0XKQpHzRbA
      0t37iM0Cz54/YzdfR9c7GILCVCJEtVJiczOFaegoqgOt3cJ4w5xN08ThCXBnYRrdOJicsiyr
      64P0TflzKblpoOvGcMELpN2B2XEPqFEUU6NtwJ3b8+wXykzOLuCQLCytwd5+FZcq07YMHKJA
      tVpFUl3MJII0tPOpj4viPO7XhXSBDMNAdflwqTJOl4rXIbGVyhEai+JyOTE6TZweH9FoBK8i
      srK2SWxiFpkWyb0s07PzB82jx0M+naJQaTG7sITQqeL2hQgGfLhcLkDG71UxRRWXKtHSLax2
      HdHpBdMgFArh8/twuD04VRW9o9Gp5Mi1BHwumd1UCsXhplU/cIHOZjMEfR7auoVWL/H08WN2
      81WisShSj+4E6Oymcvj8xz+20xsv2KuZ+F3qse7EfjrJ6uY2SA687je7MBbVSvVUXQ/o3wUC
      sCxweTxIoojbE6JaTCI4/VjNMulCjbm5GRRZweFQiUbc7BU6jMdCSJ0mFV3B61Rwuz24XC5k
      1YnSu+ADdTgLub0kGxvrmILM2soy5bqGZDR4sZEi6pX59OlLSpUm0ZCHtfVttl8+xZWYYXf9
      ORubO4TiCWSxt869uHajQMarN32/USCxXaEsBkh4BT75/CmW4sGJiUtR0RSLZl3j0aNHNOtV
      tFoRvHH2d5YRPAHapX3apsCYx0nZ0PH5guS2txHdXkJeF9Gwm4YYQazt4h6fx2oe7wLlUlsk
      C1VuL83z7PPP0AQnIY+A6h3DbLXAqLObKTI+maDS6PD+o0eoJ5amve0oUL1Ww+3xHvsuyO7t
      EoyNo0oCWBblSpVA4HRdtovqAlmmwc7mKp2WhWdyhmomycLiIi+Wl7k9PcbHz5M4XS6mIm6U
      YIJmcgVl5gF7y58R8wjsO+e5O9Hb8bEX7/woUKPRGDjGfpLDfQksQ2P55UvqrZNj1xabq8ts
      bW6D6kGwOnj9gYMVY4qT8ZCbcu24+4Ti9LE0OwGKh7DPSceUWFhaoN1uEh2fJhr0Eov4ebyW
      Jx7uPSkH4A6EeHB7nhdPn9DQRSYTUVSXj6W5KQzDYL9UZW5uhmA4ik/RKTfOb+LJ4z3+8Oud
      Nr5w9ODhBxCEUz/8F0lycx1PZIqpyRCVcoW21kEUD+5pvVgmPruA1WlSbRn4nSriq0JNT02R
      3a8T8o3WKl2JN2gpnyG5l0Z2+GlUcpiik6X5cT55usavffV9VpfXSWULfOPXf5lMNkctvY1v
      4RGd/BaNlkZwYoHZxOBZ3bWXz5m++yGYBltrywiuIAGPA19shl+NzQCweOKcNx0TyuUygUgc
      ZBWvkkAQVWYnQlQ1EaucY3Mrzf1bS7SbbQQsjE6DsXAQEbCMDvlCkYhbOZa/IgmsbyZ58MFH
      1PfTNC2VWPRgCHJ6dpr5uXG200XibpWKK4JYy1CU4oTcvaaaTX7+4x/jDseYm5mmUavgD42h
      1cu0DJHa3i6xu0tUsgUi0SitegUdmYDHSXZnmapjAr2S497d2wDUywU2dvawJBWzWUEzBW7f
      WuCTj5/y9W98lY2VZbZTGX7tX/gmjj7dovNAdaikk5tMziwQkHI45xfJ7m6BaWL4E0iFPSYn
      E7R0BV2rk29bKMltwn6F4NQtYj5l+EXe4EoMIBAeI5vL4fc7cbpmkLUKqj9KLJJHVlwszk8g
      ecLU97P4IwmiHokiYEoiHf10u6PM37rD3s4qoqpgCkEo5fF5JkfSU3W+epvLB2P9/nAMP2CM
      BZmUZQTA/WpoUmuLLC0eGOXY1Dz1Vges4x9pqsvH3bt3AHDGj+vi9R50GW8vHnQrbi2e7m0s
      CgKZrQ3UkJ/15VV0waLTahFQVdqNKmurz8kUquh6E0WR2ZcFAl4HgiiB9XoYwu0P4XFkcfgC
      NJwOJlUdQ/YxGY8gSAq3lhYwRfeFPvwA8clZjqrGd/CiCnheH4sEbmEaOpYgIYkC9x88ONP1
      rqQLtPr0ExqGhKQ4KGaTZCstWqUsu6kUuf0KG1tp5mfH2a9phD0im5vbJLdTNDQdn9dF44SH
      Zy/KxX10S8DhDqHX0uii2lVYXWuxsbFJx7DYz+2xub2LBTTqJ9cEGxQKr6f7pVcP/5uoDify
      qwkrWXHg8xx3jqsUc6TSeSzTYHt7G9200NsNak0NyzJJbm3QaOuYWo1iVaNcLmN2WqyurLC6
      sdOzjKIoI0sSgqQSjUeRBQut2ThaQJPLZgnGolhah2AojMflxDIN9oulI6/cRr2Gblrsrj8j
      V9ORJJl6Kc92ugxaheRuinR2n631TWYW5obW+2UgSjLSCB+6g7iSj2DD0DEME0mSAZMDOzSP
      jgkCCGaLVK7BVCJCp9PBEgRkSTraH0voNctzlH9/V4jKfhacQabHozz+9BPmFxdY39pDFjtM
      TyRI5uqgNZmYmjj6yKtmtvlkc59f+fJDapUqpmUi6G0KtQ6NzAZWZJ5HSzPH+tgn5wFy2Sz7
      6T1Mh0p0LEKh2MKt5yi7ZvFqWXTFy3giQTGdwu338nx5k1/56i/R6XR4ubzKw/cO3nSvP4L9
      6LqOaXFgBKKAZegsv3xB05B5/8EdBAF03USSRA7Gli0EOBgSNjVSmTIep0wkGgXTRDcMREl6
      dTcO7opuGIiihCgKx2akr8s8wJV0gSRJ5vUeeuLRv8f21RPdTI0fvEUV9XUf+GxuASaVSo1c
      Ks/0eBRRceDx+pHFFIIg4g2MIaaLnBxdXt9JIbWa7OWrNEpZDEPHrUgYlkwoHMU/N9Nz1vVN
      jHYdJRjFatUIhSMUCxtMT09TKUCl1iCWCLK9vY1TVQiFo4T9OQRBRKsVCYz1cpsWkOXj/V1B
      Urh7/+GxY8qxiawDJRVRBBTmZt54SUkS6hs34PAs9Qo3O7wM3vlRoPOg2Wy+GknS0dombtdB
      v93vlnny+DGewBjobZ49e0ooNv5qjuEAyzLwj03wK7/6dfRGlUalSLnexu120Ww0cHg97Gxu
      US6VadYrR2uBj2OysblFu1EjEPTw+NPP8YTGWN3YJLe7QzweJ5PLIxoaLn+EUi5NNptlL1ek
      UG4yGQ9dRjXdSK7dPAAcdIGq+SQtRwy9XmD12RMW3vslAm71nXaFyOdyhMeiDOreXoQ36Ntw
      XbpA17YFMLUGtZZOuVIlMTnL1Hj0qlUaylh08MNvc/5cWwNQfFEa2U1ExUkk6CF1YiGEqbd5
      +fwZqUzhijS0eRe4tmFRBNnJo0fHPwjfjPZWz+/RVvzMBk8/bW5z/bi2LcAwvPFZJv0iz16s
      XLUqNlfItTWAej5PbcCuMO16mb3sPuFIhHKpTK1SonO1Hsw2V8C17QJpzRo7z5/h9wS5vTjT
      9bvTG+S994JXoJnNu8S1bQFAYvHOPWShc9WK2LzDXNsWwBOJ4JEllNhBXNBSqTTQfcLmZnJt
      WwDV7UaVxCN/oGDQ7u7YdHNtDcDG5jTYBmBzo7ENwOZGc+0NoFQuXbUKNu8w194AggH749em
      P9feAGxsBmEbgM2NxjYAmxvNhcwE1+t1dL2/I9pFY5ommqYdRYk7pNE4/Q7wo8j2wrIsWq1W
      3zikZ+Gsul0XHc6DCzEAj8dz5Usie0WFAEZaxnfWJZGiKF5IdGg4m27nxbugw1mxu0A2Nxrb
      AGxuNLYB2NxoRvoGMDptVlfXcPjCeMQO2VKVuYVFdjfX8I1NkBizJ51svliMZACirDA+Hmdj
      O0PVrKO4w7QKabzxWYrpHeKRwNEOLOe128rb0E+HUfQ6axkush6uun7fFR3Og5EMQBBE9E4H
      sLj/6CPalV2ePE0z9yh+FKf9kIsY/jsthw9fLx1G0essZTg896Lq4Srr913S4ayMZACdVo29
      TB631096Z4NCuc7Djx6yufIC39gkgiAc/UlXHFNSFMUuHUbR66xlME3zQurBsqx3on7fBR3O
      g5EMQHF6efDee0fpwzDu9957dJ462VwRpmkd21FHEAS8rl6bc1wfru2aYJvR2c1X+ff/m//n
      KK1IIv/H7/3OFWp08djDoDY3GtsAbG40tgHY3GhsA7C50dgGYHOjsQ3A5kZjG4DNjWZEZ7gW
      K6trqJ4QYZfATrbM3btLrL88mAmeiNmbuX1R2MmWqdTbR+l4qHvx0E1gRGc4B/FYlJ3dAlpD
      4PZsmMc/f8zE3TuU9nYYjwbfCWc40zRtZ7gh/L0/fsIPn7zegPvf/vYjvnKvezvWfte56nt8
      Xow8EywIIqapY1nKcOFzxrQsdP2NShdAlb/4/ig2V8dIBqC3G+zuZfAFQkQ8Estb+zz86CHr
      L1/gP+EMd7YNrXvzYjPHf/4//clROuJ38bf/s3+lS+7QYeykDqPoddYyHDrDnXc99CvbyJyI
      FC8IIArdefa7zkXd48tmRGc4D/cfPDhKB6PjANy5/16/U2xs3mm++CZsY3MGbAOwudHYBmBz
      o7ENwOZGYxuAzY3GNgCbG41tADY3GntNsM1Qag2N9hvRvt2Oy/cCuChGMgBTb7O8vIrs9uOV
      DQqVBnMLC2yvLuMbm2QqEbkoPW2ukP/xn/ycP/18+yj9b337Ed/+cHLAGV8cRmsBRIWlW4u8
      eLlB22oiyB5q2TSR2dsUU1tY8TCWZdFsd8hXX29OJ0siifDZw6V3ObdB1x4Ah3KmaXb9ZllW
      T/lejCLb7/yz5jEo77PmezKoVT/nNsMwesiaF1a2y2Y0AzA1XrxcY/H2HWTBolPP8vR5hilf
      FPONSlpJ7vNf//2fHqVjQQ9/8J/+9pmVFU5Enxt07PDvNPKjXG9UziOPi8hXOOkMhNDlH3R0
      nRPXOjz3osp2mYwWGa7dwjAMUqk0PtUkV6rz6KOHbK+tEIpO9H/whP5OVaNwMl+B3vnaznCn
      YARnuK7H/AIdHi+bkQzA4Qny/vuvI0DHX3UDb929f65K2dhcFl98E7axOQP2MOgFUqq1+Gcf
      v151pcoS/+qv3b1CjWxOYhvABbJfafK///PHR2mvS7UN4B3DNgCbG0Gh3GA7Wz5Ke10qt6Yi
      tgHY3Aw+WUnzt/7P10PzDxdi/Fe/+y37I9jmZmMbgM2NxjYAmxtN1zfAi6ePadXLpKrw27/x
      q8d+syyL3Z0NZHeYoFsimS2xMDvF7vYG3rEJAh7npSluY3MedLUAplYjWbGYjHSHyjN1DW8o
      TnZ3h7WNLSJuk+dPXtBRA+xsrl+KwjY250lXC+Bxu2mtrbDvdncJi7JMNrVKYnqOYnYPb8BP
      fSVHfMGLVikceWF2eRVaFvob/uRvS5d3J/TM1zAMDMPo+s00zVPrMYpsL/qFZjyPejirbgCW
      edzD0zR7e3fqut7lDXp4j8+jLJeFYXZ7Buu63m0A+WKF9z/8Em6PryuTdnWfQqWF4Cjjc8k8
      eb7F3Q/usr7yHG8ohiiKR3/HEARk+ewjrl3bnkLPfA+38Dz5myiKp9ZjFNlemKbZ0xnvrPVg
      WdaZdQMQxOMubqLYe9tTWZa7nBAP7/F53NPTspUusV9tHqUTYS/jke5ntB+S2L1lrizL3QYQ
      i0Z4trpCMDbFZCJ67DenP8rXvvL62PjMwb/vf/DBqRWxsXkb/tGfveS7v9g4Sv/r33rAX/3N
      h2fOt8sAxhLTfOgbY3Vto5f8jWdjr8h/+b/+4Cjtdav8rf/oty7ses82c+TLjaP0wkQI3/Xe
      uvfUtDSdnz5PHTv2a49mRlqn0GUA2dQmT1a2CY/PnVnB64humMea4s4Fr4r6x3/2gp88e32T
      /52/+AHffDh+odf8olBptPkb/+DHx4796sOZk+t3BnLMAPLJZX708TNcbpV8vnguSl4Gv/d3
      vs/na9mj9O/+9gd8/YH9kNgM59hXWiGTIhibYGtjncnJ2FXpNDIdw0TTjaM/48SohY1NP461
      AHP3PsKVL/Lg1iyq62ZumWNzszhmAA63j5mZ0w8t2bwd1UYbTX/97eBxqDgdtmPuVWDX+hXw
      N//hT4+NXvy7v/0h//LX71yhRjcX2xnO5kYzUgtgWQYrzz4nOv+QRm6LUr3N3Nwcm2sreMPj
      zL7Fh7NhmDTanaO0KAh4XPZAt83lMGJgLIuQz0VDM6nValiWTDmXITZ3h+LuNqY5NrIv0LPN
      HP/F3/7+UXos4OIP/lrvIFr9fIG6Ipe9igp3Eb5AhtEdPa2X3CBfoF6+Nf306lW2c/EF6tLB
      6vKXgf71e9m+QJZ1oi5NC7PHHIxhGPTavbXfvRjJAARJRlUkNGBm4TZWe5/nL70x2LQAABaF
      SURBVLLEPRF043UgqO6ASb39TABE8eTxAbJSd49NkqSuKGeCICJJUlc+oij2zbtbr96yUo9g
      UL3kLMtC6PIFeqXviYmaQXp1BQMTxJHK0Y9u/57ega4O9D2hwyvZs+owCr116L6+KImIvSIC
      iifr8ZW/2ChK6FqTVL6O5UjhCDjIlRo8+ugRyc1VYuOT/aeghQFh9PqF4+sp2h0Z7iB0X+88
      e+XzN//hT3m2mTtK/9XffMg3Ppjtfb1eepxSX8uyeogeRs07Q8jGAWU7K93hEvtd5ypCI57y
      XtAnJGafso1kALLq4v7D145vY/GDf+eXTjeCkcxVaL7R34+HLn+uoVhtkt6vHaXf/P6wuXlc
      6jDo7/+jn/Fk4/Xb9z/8K18hHrYn3GyuDnsY1OZGYxuAzY3GNgCbG41tADY3GtsAbG40tgHY
      3GiurTdoS9PZSxaO0pIoEvHY9m5znNGc4UyD5aefEl14H72UYjdf5vadW6wvL+MNJ5ibil+U
      niOzmS7xe//bT47SIZ+T//bf++YVamTzLjJyCxAJemh2TOq1Ng/uTPHZL54x9+g99lNbmGZ0
      oDPcyZWKRo+tTOFAdn2vTL2lHR2dHPOd2hmulw6WdXD8tI5o/Z3hejuMnWSwM9zx46M4w51X
      UKovWmCsXnVm6D30NXREs9vt4dSBsQYhiBKKLNEGDKNDq9HA4XbQaDbp6MbQwFgnXTSkng5V
      B7J/9w8/4/H664Xu/8Ff/jKTY/4TkoMDN51Q4WDHwx6yvQI89TveL3jUSQYFxhJO7MY4KMjU
      RQWl+qIFxupVZ5LcQ19JRhS7DeDUgbEGoWtNUoUmOFLMTk2QypZ48Og+OxtrjE/NjJKVzRlI
      5ir8x//D947STlXi9//av3R1Cn2BGd0Z7r1HR+nb/hAAs4u3zlcrm4EYpnUsNpFTvbZjGReO
      XXM27xSNVofvfbp57NhvfXXpwq5nG4DNO0W10eYP/snHx45dpAHYA+M2NxrbAGxuNLYB2Nxo
      7G+Aa06l3j4WV1+SRP7Sr9y+Qo3eLWwDuOaUai3+l//306O0qkjvjAG0NJ3OG7O5qnJ5USYO
      sQ1gAP/zP/0Fz7fyR+m//Ot3iYU8V6jR9eL3//HP+d4nm0fpf+M33uObH85dqg5vbQCFTIp0
      oczcwhLZ5Aa+yARjoesVWHc3X2U1tX+ULtfbtgF8AXi8lmEnVzlKf+3+VF/ZtzaAZDKJK5ig
      U0qjBMfJ7qWIBPuER7EOnI9ORu23jv5z4niv+P4WnMzBOpTtlfGptwiwel+vRxZWn3xPe/7r
      a/X45bR7GliHipxWh4uQtQbmc2p63+YzCVtYfO/TTf7449ffPbPxQN+yvbUBPPrSV6gXd3j6
      Is/CwxiyJB55QHZ5g/LK0/CEDgch9rq9QQ9kT3ggWiZmj7CEhmF0G4ZlYp4MpdfHG9Tq4wVp
      mmaXDpZlYvSIu9frfMuysHp4pBqG0fX8mj29Yl/nc1IHs8eD1+/8vnXWIzRi933rLWu9ku11
      zUyxTrXRPkpH/G5Cvt4bqHfpYPV6Hgbp0OO+Gb09fk96v1rWwX1/awPY294gX67y4IO7bK29
      xBseH9kbVBRFxD7eoCeFe4Xi6+cNKozgDSoM8Abt5QUp9QjPOLo36Ok8Ug/POalvrxCG/c4/
      vYen0OUx2U9WGOAN+g+++4zvf7Z1lP43f/Mhv/OtBz116/JIFcSeOhyEZzxRl6LQ49npHcqx
      t3fwW3iDvsnE7AITr/7/wcP33zYbG5srxR4FOid+7+/8gJ+/3D1K/+5vf8h0pHfTb/PuYBvA
      NeK//79+ys9f7B2lf+dbD3gwFx1who1tANeIakM7tk6gZQf+HYptADZvxV6hxu/+jT86SkuS
      wN//6/9aT9l6S+P7n77+MBYE+K2vvhuLqGwDsHkrLMs6ttOl1GMh+iGV+nEf/3fJAM7uDWrq
      rLx4RjpfOgd1bGwulzO3AOXMLt74LMX0Domx4HnodCPRDZNyvXWUFhAI+11XqNHN4MwGYFoW
      kiz13JfJ5vRsZ8r8J//dHx6l3Q6Fv/fX/8oVanQzOHMXKJSYoLC1jCc4dh762NhcKmf/CBYV
      7r0KlfLaB8PCqby2LYcsoOs6iiQcOy5w4C9zTFYR0XUddQTZk/mKB953J3QQMU2zp2y51mR5
      53UcUVkSmYu6TqWv80gHjssKB45vvfWlSwfL6p2v3LNs/XQ4ISuAaRq9dRCHyyryKx3E4/pK
      Qre+knSo74myCQd+Q8ePvXoexF6yx3WAA1+gbh3ANLpldUNHPlE2yzIROK6DIh3oIFhndul7
      jWVZaJpGrVbD6Tw+C9rLN+bw0id9N84qa5om7XYbl8t17PdarYbX270nWa88RpHtp2+j0cDj
      8QyVHSVfgHq9fiH5jiLbq34uW4dR7gX0fnbOdRj0cJ9gp9PZdYMOMQyjp6PZeWIYBoIgdOmg
      63pfvU4yimwvDr1iz5JHLw5jWvbL1zQMhAuuXzh7/RxyWfr249LnAdqNCtupDJLiYnFxtu9H
      SLtRo6l1KJcrSIqTiYl4X9lquYLWaVGrN3H7goQDh28mg+ePn4KsEJ+YYdCCO61Z4cXyJorq
      ZP7W4pBSmOxs79KoZHGPzTGdCA+RP06n1aDebFOuVBAllcmp8b5lq5UraEabarWBy+MnGhk8
      0tZp19nY3kUQVZZuLwwsc7OU5fPlJE63i4fv3eurQ71cQTM1KpU6To+P+Njg8rbqZbZTGUJj
      cSIh/8ABEl1rsrGVxBJkbt1Z6quvobeoVBpUqlUEQWZyZnJg2ZKba9RaGk5vkLmp8b5ylx4V
      wjRMLMDhcPTa5/gIh9uLS5XpdDp0OoOn9EXBoN5oIQjCMS/qfGaPXLGMw+Houcv8awxS21vU
      Wh0cDvVUb6NqMYPDG+oZoXgYitONx6XQ6XTQhpVNtKjVmq/KNlwv0zyoX3VI/QLUS2Ukh0qj
      WmdQnGdRgmq1caDD0FxBlhVkSSKd3ObFy7WBa5Ms08QEVHWwvpLsxO91oXc6aNpwF49GvYYo
      qyhDAvheegsgSSKmadHpaENlC7spfNFp/A55YOW4fUFAIFcoYr6x8CEYjjI7axKLeCk2NDyO
      fjmITMwuEk50KBXLyEMetEq5SiQap9UxCAbfbp/j4m4KV2SSsGtw2VxeP2MCZHP7PRfjnESW
      RAzdQj9F/QbjcdyNFFYwMPBt6vT4iAqQyRZOpYOpa1RqGuOTCcbCkYGykiRi6iYdqTN0EV8l
      s4sUiBL3Ooa+uWcXlihVaiiOvjcduIIWIJfapaaZdBo1hlVlYCzCs5/9iJXN1MDKEQSBza0d
      4okEQd/rfqmsyJTyWba2d9A6g95xAkarytbyC7L7FUqNwQ+PP+BH72g0Gg30t2gBAHzRKCu/
      +AkvV3eGlm1jY5t4IkEoMHzNdWFnh7puorWaA9/qAJVchsDEPLeX5gc+CIIgsL6xRTyRIBwc
      rkM1m6HRMUgndzFEcaCBF1NJapqB1moN1dcTibL95Oc8ebE+9NnZXFtnY2OL7a2tgXKXbgAT
      C4tMRzwYimvoxcv5HPe+/KtYjcrAh6RcyKAbBhubm+T2y2/8IjIxOY6kuAkOmVVVnG4k3xgP
      7swRdKtDNDMpVprMzc3h977dbG01l2XpS7+MqNUYZELVYu6obNl8cWi+8YVbzET9GKKCMkTW
      1A3Su9ts76QGPlC1UgFdP9AhnRuugys4RtivEp2YZlhNjs0tMJsIYwrSUH0b+1mmHnyEy2oP
      rDMAfzDI5EQUbyA0UO7SDSCztUlLdBANBYbKhmJx8qlNXIHgQEUDkThBnwsBaDRbb/xikMmW
      mJqawuMa3BQKgkBuL8nW9i6doc28QDjoJZPJ0GgN72r01DmWoLS7heoLDOyH+kJRwgFPj7L1
      Jr+9SdWSiY+FhnYp3OEggqYNbcW8wQhjQS8C0Gw2B8oCCKLO3l6Oaqk49EEtJrcp6RCPDh9I
      8EbiNHIpBLdvqLEEg35KpTLlcmWg3KUagNasUahWKeULVKq1oTeo3WwdffwNlW1rqA4Vrd1+
      46iI2yWTTCapNdp9zwUORqXmZ3C5XUin+AbotfZ0FNrNJogioiAMbc4Py9bRBpdB7zTJVSuU
      s3nK5erQOjM6BpPzi9wZMloE0GprqA4HHW24wTs9QeamJ3C5nAO7P4beIlsuU8kVKJUGt/IA
      WqsFooAkCEMNaz+7R63RYXZ2eqDcpbcAhmGhyBK1Wm2gnK61SCaTCKoLr8c9ULaYzxCfWSI+
      Fsb3xjdApVzB7fagqmrPxexv0qzk2VrZpt5uUmsP7o36Az4KuRyNWplydfhb+SSG3mY3uY0l
      O/F6PAMfkvJ+jsjkHIloBF+PibmT6B0T1SFTq1WHyiouDzvLT3n+YnVINyxPaHyG8djpdMht
      rpMuVimXSkP79XrHQHXI1GuDX4im0WEvuUUHFZ93cJ3BwcBI0O+hVCoPlLtUA1BdXuIhP7Gp
      WWRLH1hgUZKZnF/C71TwuN0DC+wPhklvveDp8g7x2OslgMViGdmE2Owsfs+g9bkWguxi8cEi
      7Xob9yl2XDEtEER6hhIZhiDKJOZuEXIreDyDy+YLBNnfXePzZxvE44OXN8qKi8mxEOHxaZwi
      Q1uWVrlIud6mXB389vX4g5Qzm3z6eG2oDpZlEZ6aZml2AsXpHthVkWQnk7EIwfgkLnlwSyiI
      ImNTi0R9Djxez9AHV1YUJEXGoQzuLF16CxCbnmbz2SeILv/Ai+utKuvbuwiYrG8M/pKvV0sI
      sgu/R2W/+NriS/kMa2vrrK6sUKw0BuTQ4ec/+XNeLK/jdLu7wrd0YzE+Pc/t23fwuYb1Rrsx
      tTprGzuIWKxtbA58+BrVCobgIOh3UdgfvuYiNDVDevlzdMU1tFsjqyrjEzEkYbBks1ahYymE
      Au6hOmj1fTYzNaJjY0hak2EdpuDENIX1Z2iSY+C3kKl3WF1bRxQF1tY2hnaXUqk07XaHanl/
      oNylzwPsbmxiKF6s9sEwaL+qr5XKyKqDTkdHqx9M1PR71JxuHwtLEeRX3ZzDgE3vffhLR34g
      oihRrfabQFH5+je/SS69y4vVbWbnZweWoVbK8/HPnzI1OUYgNvrmgM1qFUFS0Do6Rq2OBvRr
      nxwuL/MLQZRXOyIOc93Krq+hyW4c+sFIyaCXjOxwgVHF7/cNbIVUl4f5hcCRDoNQXH6axSc8
      reXRLXnoKFB+c4MWTryGhg595XWthmHIaFoHs16nCQxyxJiZnaFUzNNi8CjdpRtAbHoaR61B
      takPvDnB8Wlc4YP3RzwxPlBRXWuR2trGtEz8oRixyMEIU3Zvh2KlgWVazC31CdsIgMb3/uiP
      cQTHiMViSKIwsO/a6gh849e/zPPnq3g8ow+DeiMJ7nnDr8qWYND4lK63SW1vYZgm3sAYE/HB
      E0tj09MI1SalSmPwG9U0yKV2UANTxIZMLBkdjeTuFrpp4vVHmBrv3w0SJYWHH3w4UMc3CU9O
      csvfZL9YHaiv6g7z8NHBIx+PJ/q+MA7ZTW4ju7y4h7TQl2oAWrN24PcBNNsm1txU/zePoaEZ
      Au1KloapMjeV6JuvIIiIAugmx8IGjk/NMQ5YepWVzSzxaL93hsq3fusvHjsyaLwlk85SsDos
      3V9iazND8O5orYBl6mi6Rae+T0UTWZiZ6Ct7OApmWvQMifgmutZkdWMHE6g3tIEtLKaO6Qoi
      NfdJ1WTu+L1974UgCoiC8Cq85GAd2vUixbpEIuYfKAcHo0Cr69sYQK3WxmRAi2WZtDUdS6uR
      r+ncmu8/umMYbfLFMl5TAGlwG3SpBqC6vNy7fx+AQi4/ULaSy1CVvBTyNVyihT6V6KusKCtM
      zS3gUA4kDrtAlmlSrRTZ2koyPrsIfcc6dCrlNoJgosoiljL4/TIznaBQ03EiMDUVGyjbi0a5
      QLElU8wV8cgiGhN9m35RlJmamcOhHrzJBnWBZNXF3Vf1W8zlB/aTtUYFU3JR3s8jCvLA7pIg
      ykzMzOFUh3/vGHqb5Rdb7Od9iJKDW3cW+xqhJDu584a+g+i0KuTyTWqVHD5FoUX/biOWhNfr
      RwIUdfD8z6UagGWZGK+CtQZCocEjO7Fxks+eMz13m1a1OPCDzuHs3Q158os/pyl58aoOxoJe
      yuV+Q2JtUskCUCfmd2EE4gO7JVigNWpYapyAc/S5AHcwSuPZU6Zml9Aa5YEjJWqfsvVUy3od
      6NcXCg6sM8XppbL6lGB8FqtVGSirOk4f4U51BfjSL32Ax62Q2cuco74BzNYO49PzGO3awPtj
      ihpTd+8TVESePX3GZKz/JNulGkCjlOV7P/yYQHiM8fFJ5uf7d4Ga1RLb2ylKtRaJ8UksOIUf
      4nHe+6WvUq+U2NhKUijXBxRWRTArtE2DvZLJfFxBb/Yfv9hJZbi1GGNtLcvdW/ERtTpwvd7c
      SlKoNInHJ96qbD3zbRT57nd/hDccIRYbZ+nWXP+3r+ri/S999Cp1ntHjTNaWX9JpVgnP3R88
      0qdV+ZM/+j7uUIRYLMGtARNyRqfOxvo27mKdaDRBgv7dO9ES2F19yR4guwbPW0jf+c53vjO0
      TCNwGDZbVbsbddXlZWlxAb1ZJr1fY3pqvO+NV11eFhcX0JsVMoXqQNmTHC4acTgcqE4X8Xgc
      t1Ol3W53rVQ7pFJv4VGgVG8Riycwda2vbK28T3a/SqNWxeH24nZ2l/VwdZyjhzeirLpZXFoE
      rUYqW2J6ZnKk8eh+5ZBVF4u3FhE6dVKZIjMD8jW0BtlijeTaMslskVg8OpIR9q1LQcTUNVrN
      No2OSSI+1jdfSXaweOsWktFkZ7fAzOxUX33FI9kW27s5Zuam+3fZBJno2BjhcIhwKDBwPcLl
      tgDFDN//8S8YS0wwkRj81mmUsvzgRx8TTowzMT56P3s0TEr5LJbqZiLkpd0xBj6QWruFIai4
      XOLp9+F4g3Ztn+/94CcEY+NMTsTP5e0P0G4U+d73fkwgmmByYnDLpDVr1OoW8ckZssnkwCHI
      URBFmcmZOSZn5jBNc2DZOu0K/98f/xm+aJypycRAWV2r8t1//gO80QTTk4Nfhh1To9q2WP30
      E1RfkA8f3usre6kGIDmcfPDRV4iGvOzs7A2UdQXG+M1v/4uvUqdZhnEWFB5+8D6CpCBYJqIk
      Uan0d/qamV9gL51F7+i8TedF9YT4jW9/+1Xq/MomySoPPviIRDRIcnuwC7nTP4a1+5RkVUB1
      eYdOmr0NvdbxHv9d4d77X2I8Hia5nRyor6R4+dZf+Auvzx0gK1iw8tkvmLv/AcW97cE6DPz1
      nHG4/QjtMj/92adE4v2XAcLB0KYsy6/+pAs2gIPRAlkSkXpsCHGSRq2GblrIDicux+jvkKPN
      Gc65bLLqxiG0+enPPsYfjQ2eO2lVqbXB0FpoHf3C67cXkuLErRj89Gcf440M1vd4nQ1eRKTI
      Dr72y79CIujm3r27A3W4ZG/QOqVaC5/PTTaTGeqr8q7SajYxdJ12q/lORWDWOy32SzV8Pi/5
      THagg1un3ULXLarlGk6X4626cmfF0NsU9iuv9M0M9fC8CM41LApwsM5V0849GsIoGIZBs9ns
      CttRLpcJBIavQxhVthemaVKr1fD7h08IjYJlWVQqlTPpdpCPSedwlZwgoCjKSK3AWevnXcGO
      Dn1DEQSx50jdTePSvUFtbN4lbAOwudHYBmBzo7ENwOZGYxuAzY3m/weQXIbDnfSTVgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top boundary hitters' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
